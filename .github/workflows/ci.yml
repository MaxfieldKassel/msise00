name: ci

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CMAKE_BUILD_TYPE: Release

on:
  push:
    branches:
      - main

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system build tools
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            sudo apt-get install -y cmake gfortran make
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew update
            brew install cmake gcc make
          else
            choco install mingw cmake make --yes
            RefreshEnv.cmd
          fi

      - name: Build Fortran driver
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cmake -B build -G "MinGW Makefiles"
          else
            cmake -B build
          fi
          cmake --build build

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packaging tools
        run: pip install --upgrade build

      - name: Build wheel
        run: python -m build --wheel

      - name: List built artifacts
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            dir dist
          else
            ls -l dist
          fi

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: msise00-wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl

      - name: Test wheel install
        shell: bash
        env:
          FC: gfortran-11
        run: |
          wheel=$(ls dist/*.whl | head -n1)
          echo "Installing $wheel[tests,lint]"
          pip install "${wheel}[tests,lint]"
          flake8
          mypy
          pytest